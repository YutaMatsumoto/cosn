COSN: Cloud-based Online Social Network : Phase 1

Scheme

	Used Dropbox for Cloud
   	Used GMail for friendship confirmation

Members 

	Bryam Noguera
	Yuta Matsumoto

Files

	README          ... This file

	cosn_log.py     ... Logger classes for errors and activities.

	cosnlocation.py ... Location file code such as parsing and updating location.
	cosncontent.py  ... Content file code such as parsing and inserting new entry.

	cosndrop.py     ... Dropbox code to store/download files from dropbox cloud.
	cosnstorage.py  ... Wrapper that defines API for cloud code needed this
						program, which takes specific cloud code such as cosndrop.py.

	cosnui.py       ... Code related to user interface such as code to prompt for a file path.
	chatscreen.py   ... Chat screen class but not used much in this phase
	common.py       ... This file contains code usd by a couple of other modules such as get_open_port().

	main.py         ... main

	peer.py         ... Client code
	peerserver.py   ... Cerver code


What Doesn'T Work / Possible Problems

	The cloud logic does not change IP address and port to 0.0.0.0 and 0 when
	it is offline. It does not update IP address and port number as it the
	user device gets a new IP address and a port number.

	Does not store database of users in a file. If the user quit the program,
	the database is lost. But we keep the database in a dictionary.

	Logging and error recording are not done for everything.

	Chat is not implemented.

	This program just upload an identical copy of public profile since we are not sure what to
	do with this specific file.

What Works

	Everything Else.

How to Run Code

	Please have Dropbox account and GMail Account.

	This is a terminal application based on **Dropbox** and **Gmail** which
	has menu user interface which prompts you for number selection.

	This program stops when the user hits Control-C.

	1.	Invoke the application with the following syntax

		$ python main.py user-ID gmail-address

		For example, the following command can be used

		$ python main.py yuta utah.matsumoto@gmail.com

		After this the program will prompt you for the verification code you
		can obtain at Dropbox website (this token will be saved so no prompt
		the second time around), and automatically create and upload three
		files : location.xml, content.xml and publicProfile.xml prefixed by
		the user ID. After this, menu shows the following
			
			1. Chat
			2. File Upload
			3. Initiate Friendship
			4. Confirm Friendship

		This program currently does not support chatting, but all the other choices work, 

			"File Upload" 
				This lets you upload files on the local computer to the
				cloud and update content.xml automatically. This will prompt
				for the file information that will be inserted to content.xml.

			"Initiat Friendship" 
				This will prompts for an Email address and sends an email to
				a peer with the location.xml. The email is dispatched by GMail
				server so the user of this program needs a google account. 

			"Confirm Friendship" 
				This prompts you for the link to location.xml of another peer
				that you obtain via email. After confirmatoin, all the files
				referenced in the content.xml of the friend will be downloaded,
				but the files will be prefixed by the user ID of the friend.

